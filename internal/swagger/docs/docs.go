// Package docs Code generated by swaggo/swag. DO NOT EDIT
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {},
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/api/course": {
            "get": {
                "description": "List all courses",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "courses"
                ],
                "summary": "List all courses",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/handlers.responseCourses"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/handlers.responseErr"
                        }
                    }
                }
            },
            "post": {
                "description": "Creates new course",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "courses"
                ],
                "summary": "Create Course",
                "parameters": [
                    {
                        "description": "Course Object",
                        "name": "course",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/handlers.inputCourse"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/handlers.responseCourse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/handlers.responseErr"
                        }
                    }
                }
            }
        },
        "/api/course/{ID}": {
            "get": {
                "description": "Gets course associated with given ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "courses"
                ],
                "summary": "Get Course",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID of course to retrieve",
                        "name": "ID",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/handlers.responseCourse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/handlers.responseErr"
                        }
                    }
                }
            },
            "put": {
                "description": "Updates course associated with given ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "courses"
                ],
                "summary": "Update Course",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID of course to update",
                        "name": "ID",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Course Object",
                        "name": "course",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/handlers.inputCourse"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/handlers.responseCourse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/handlers.responseErr"
                        }
                    }
                }
            },
            "delete": {
                "description": "Deletes course associated with given ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "courses"
                ],
                "summary": "Deletes Course",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID of course to delete",
                        "name": "ID",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/handlers.responseMsg"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/handlers.responseErr"
                        }
                    }
                }
            }
        },
        "/api/person": {
            "get": {
                "description": "List all persons",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "person"
                ],
                "summary": "List all Persons",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/handlers.responsePersons"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/handlers.responseErr"
                        }
                    }
                }
            },
            "post": {
                "description": "Creates person",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "person"
                ],
                "summary": "Creates Person",
                "parameters": [
                    {
                        "description": "Person Object",
                        "name": "person",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/handlers.inputPerson"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/handlers.responsePerson"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/handlers.responseErr"
                        }
                    }
                }
            }
        },
        "/api/person/{name}": {
            "get": {
                "description": "Gets Person by Name",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "person"
                ],
                "summary": "Gets Person",
                "parameters": [
                    {
                        "type": "string",
                        "description": "last name of person to retrieve",
                        "name": "name",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/handlers.responsePerson"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/handlers.responseErr"
                        }
                    }
                }
            },
            "put": {
                "description": "Updates person",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "person"
                ],
                "summary": "Update Person",
                "parameters": [
                    {
                        "type": "string",
                        "description": "last name of person to update",
                        "name": "name",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Person Object",
                        "name": "person",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/handlers.inputPerson"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/handlers.responsePerson"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/handlers.responseErr"
                        }
                    }
                }
            },
            "delete": {
                "description": "Deletes person by name",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "person"
                ],
                "summary": "Deletes Person",
                "parameters": [
                    {
                        "type": "string",
                        "description": "last name of person to delete",
                        "name": "name",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/handlers.responseMsg"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/handlers.responseErr"
                        }
                    }
                }
            }
        },
        "/health-check": {
            "get": {
                "description": "Health check response",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "health-check"
                ],
                "summary": "Health check response",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/handlers.responseMsg"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "handlers.inputCourse": {
            "type": "object",
            "properties": {
                "name": {
                    "type": "string"
                }
            }
        },
        "handlers.inputPerson": {
            "type": "object",
            "properties": {
                "age": {
                    "type": "integer"
                },
                "courses": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                },
                "first_name": {
                    "type": "string"
                },
                "last_name": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                }
            }
        },
        "handlers.outputCourse": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "handlers.outputPerson": {
            "type": "object",
            "properties": {
                "age": {
                    "type": "integer"
                },
                "courses": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                },
                "first_name": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "last_name": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                }
            }
        },
        "handlers.problem": {
            "type": "object",
            "properties": {
                "description": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "handlers.responseCourse": {
            "type": "object",
            "properties": {
                "course": {
                    "$ref": "#/definitions/handlers.outputCourse"
                }
            }
        },
        "handlers.responseCourses": {
            "type": "object",
            "properties": {
                "courses": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/handlers.outputCourse"
                    }
                }
            }
        },
        "handlers.responseErr": {
            "type": "object",
            "properties": {
                "error": {
                    "type": "string"
                },
                "validation_errors": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/handlers.problem"
                    }
                }
            }
        },
        "handlers.responseMsg": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string"
                }
            }
        },
        "handlers.responsePerson": {
            "type": "object",
            "properties": {
                "person": {
                    "$ref": "#/definitions/handlers.outputPerson"
                }
            }
        },
        "handlers.responsePersons": {
            "type": "object",
            "properties": {
                "persons": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/handlers.outputPerson"
                    }
                }
            }
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "",
	Host:             "",
	BasePath:         "",
	Schemes:          []string{},
	Title:            "",
	Description:      "",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
